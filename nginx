# polly nginx

upstream polly_tts_app_server {
    server 127.0.0.1:5100 fail_timeout=0;
}

server {
    server_name polly.spearxr.com;

    client_max_body_size 20m;

    location / {
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        # proxy_redirect off;
        proxy_pass http://polly_tts_app_server;
        proxy_read_timeout 600s;

        # client_max_body_size 20m;
        # proxy_request_buffering off;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/polly.spearxr.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/polly.spearxr.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = polly.spearxr.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name polly.spearxr.com;
    listen 80;
    return 404; # managed by Certbot
}
